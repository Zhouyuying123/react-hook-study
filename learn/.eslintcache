[{"/Users/zhouyuying/learn/react-hook-study/learn/src/reportWebVitals.js":"1","/Users/zhouyuying/learn/react-hook-study/learn/src/Demo/ChildMemo.js":"2","/Users/zhouyuying/learn/react-hook-study/learn/src/Demo/UseContext.js":"3","/Users/zhouyuying/learn/react-hook-study/learn/src/Demo/child.js":"4","/Users/zhouyuying/learn/react-hook-study/learn/src/Demo/UseMemoFun.js":"5","/Users/zhouyuying/learn/react-hook-study/learn/src/Demo/OneUseState.js":"6","/Users/zhouyuying/learn/react-hook-study/learn/src/index.js":"7","/Users/zhouyuying/learn/react-hook-study/learn/src/Demo/Usecallback.js":"8","/Users/zhouyuying/learn/react-hook-study/learn/src/Demo/TwoUseEffect.js":"9"},{"size":362,"mtime":1611654788114,"results":"10","hashOfConfig":"11"},{"size":275,"mtime":1611654788112,"results":"12","hashOfConfig":"11"},{"size":596,"mtime":1611655919106,"results":"13","hashOfConfig":"11"},{"size":291,"mtime":1611655958672,"results":"14","hashOfConfig":"11"},{"size":1299,"mtime":1611654788113,"results":"15","hashOfConfig":"16"},{"size":1094,"mtime":1611654788112,"results":"17","hashOfConfig":"16"},{"size":288,"mtime":1621928330907,"results":"18","hashOfConfig":"16"},{"size":1440,"mtime":1621928867781,"results":"19","hashOfConfig":"16"},{"size":893,"mtime":1611654788112,"results":"20","hashOfConfig":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"169m40z",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},"8byc3m",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zhouyuying/learn/react-hook-study/learn/src/reportWebVitals.js",[],"/Users/zhouyuying/learn/react-hook-study/learn/src/Demo/ChildMemo.js",["42"],"/Users/zhouyuying/learn/react-hook-study/learn/src/Demo/UseContext.js",[],"/Users/zhouyuying/learn/react-hook-study/learn/src/Demo/child.js",[],"/Users/zhouyuying/learn/react-hook-study/learn/src/Demo/UseMemoFun.js",["43"],"\nimport React, { useState, useMemo, useEffect } from 'react';\nimport ChildMemo from './ChildMemo';\n\nconst Memo = () => {\n\n const [count, setcount] = useState(0)\n const [num, setnum] = useState(0)\n\n const res = useMemo(() => {\n  return { count ,num};\n },[count]);\n\n useEffect(() => {\n  console.log('=useEffect==')\n })\n \n console.log('render')\n\n return(\n  <div>\n   <img src=\"../../public/logo192.png\" alt=\"22\" />\n   <h1>避免重复渲染问题</h1>\n   <div>\n    <p>memoization? `js`中的一种缓存技术，以空间换速度（cpu密集操作时，可以将初始结果存储在缓存中来优化使用）</p>\n    <p>是一个函数，有两个参数，第一个是函数，第二个是数组</p>\n    <p>useMemo(() =>{ }, 默认可以不写)</p>\n    <p>在组件渲染过程中执行</p>\n   </div>\n   <hr />\n   <div>以下是例子，num改变的时候页面num并没有更新，但是count更新后num的更新就显示出来了</div>\n   <p>res{res.count}---res{ res.num }</p>\n   <p>change-{count}</p>\n   <button onClick={() => { setcount(count + 1) }}>set count</button>\n   <hr />\n   <p>change-{num}</p>\n   <button onClick={() => { setnum(num + 1) }}>set num</button>\n   <hr />分割线<hr />\n   <div>\n    <ChildMemo num = { num} count = {count}/>\n   </div>\n  </div >\n )\n};\n\nexport default Memo;",["44","45"],"/Users/zhouyuying/learn/react-hook-study/learn/src/Demo/OneUseState.js",[],"/Users/zhouyuying/learn/react-hook-study/learn/src/index.js",[],"/Users/zhouyuying/learn/react-hook-study/learn/src/Demo/Usecallback.js",["46"],"import React, { useCallback, useState } from \"react\";\nconst UseCallback = () => {\n  const [count, setcount] = useState(0);\n  const [num, setnum] = useState(0);\n  const [number, setNumber] = useState(0);\n  let callBack = useCallback(() => {\n    return count;\n  }, [num]);\n  const handleClick = () => {\n    setNumber(1);\n    setNumber(1);\n    setNumber(1);\n    setNumber(1);\n    setNumber(1);\n    setNumber(1);\n  };\n  console.log(number);\n  return (\n    <div>\n      <h1>useCallback</h1>\n      <button onClick={handleClick}>点击</button>\n      <div>\n        <p>\n          作用：避免组件重复渲染，提高性能（useMemo）,可以控制组件什么时候更新，同样用到缓存技术\n        </p>\n        <p>和usememo的区别：useCallBack是函数</p>\n        <p>\n          使用：useCallback(()=>{}\n          ,[]),两个参数，第一个是函数，第二个是数组，数组可不写\n        </p>\n        <p>可直接callback()执行</p>\n      </div>\n      <hr />\n      <div>\n        <h2>状态count：{count}</h2>\n        <h2>状态num：{num}</h2>\n        <h3>callBack:{callBack()}</h3>\n        <button\n          onClick={() => {\n            setcount(count + 1);\n          }}\n        >\n          count add\n        </button>\n        <button\n          onClick={() => {\n            setnum(num + 1);\n          }}\n        >\n          num add\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default UseCallback;\n","/Users/zhouyuying/learn/react-hook-study/learn/src/Demo/TwoUseEffect.js",[],{"ruleId":"47","severity":1,"message":"48","line":9,"column":5,"nodeType":"49","endLine":9,"endColumn":12,"suggestions":"50"},{"ruleId":"47","severity":1,"message":"48","line":12,"column":4,"nodeType":"49","endLine":12,"endColumn":11,"suggestions":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"47","severity":1,"message":"56","line":8,"column":6,"nodeType":"49","endLine":8,"endColumn":11,"suggestions":"57"},"react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'num'. Either include it or remove the dependency array.","ArrayExpression",["58"],["59"],"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"React Hook useCallback has a missing dependency: 'count'. Either include it or remove the dependency array.",["62"],{"desc":"63","fix":"64"},{"desc":"63","fix":"65"},"no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [count, num]",{"range":"68","text":"69"},{"range":"70","text":"69"},"Update the dependencies array to be: [count]",{"range":"71","text":"72"},[147,154],"[count, num]",[253,260],[263,268],"[count]"]