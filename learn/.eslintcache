[{"/Users/zhouyuying/react-study/react-hook-study/learn/src/App.js":"1","/Users/zhouyuying/react-study/react-hook-study/learn/src/Demo/OneUseState.js":"2","/Users/zhouyuying/react-study/react-hook-study/learn/src/Demo/TwoUseEffect.js":"3","/Users/zhouyuying/react-study/react-hook-study/learn/src/Demo/UseRef.js":"4","/Users/zhouyuying/react-study/react-hook-study/learn/src/Demo/UseContext.js":"5","/Users/zhouyuying/react-study/react-hook-study/learn/src/Demo/UseMemoFun.js":"6","/Users/zhouyuying/react-study/react-hook-study/learn/src/Demo/ChildMemo.js":"7"},{"size":1246,"mtime":1606837144506,"results":"8","hashOfConfig":"9"},{"size":1094,"mtime":1606656945868,"results":"10","hashOfConfig":"9"},{"size":893,"mtime":1606657609126,"results":"11","hashOfConfig":"9"},{"size":555,"mtime":1606658369125,"results":"12","hashOfConfig":"9"},{"size":716,"mtime":1606659807683,"results":"13","hashOfConfig":"9"},{"size":1299,"mtime":1606837002428,"results":"14","hashOfConfig":"9"},{"size":275,"mtime":1606837111470,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mdjvcm",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/zhouyuying/react-study/react-hook-study/learn/src/App.js",[],"/Users/zhouyuying/react-study/react-hook-study/learn/src/Demo/OneUseState.js",[],"/Users/zhouyuying/react-study/react-hook-study/learn/src/Demo/TwoUseEffect.js",[],"/Users/zhouyuying/react-study/react-hook-study/learn/src/Demo/UseRef.js",[],"/Users/zhouyuying/react-study/react-hook-study/learn/src/Demo/UseContext.js",[],"/Users/zhouyuying/react-study/react-hook-study/learn/src/Demo/UseMemoFun.js",["31","32"],"\nimport React, { useState, useMemo, useEffect } from 'react';\nimport ChildMemo from './ChildMemo';\n\nconst Memo = () => {\n\n const [count, setcount] = useState(0)\n const [num, setnum] = useState(0)\n\n const res = useMemo(() => {\n  return { count ,num};\n },[count]);\n\n useEffect(() => {\n  console.log('=useEffect==')\n })\n \n console.log('render')\n\n return(\n  <div>\n   <img src=\"../../public/logo192.png\" alt=\"22\" />\n   <h1>避免重复渲染问题</h1>\n   <div>\n    <p>memoization? `js`中的一种缓存技术，以空间换速度（cpu密集操作时，可以将初始结果存储在缓存中来优化使用）</p>\n    <p>是一个函数，有两个参数，第一个是函数，第二个是数组</p>\n    <p>useMemo(() =>{ }, 默认可以不写)</p>\n    <p>在组件渲染过程中执行</p>\n   </div>\n   <hr />\n   <div>以下是例子，num改变的时候页面num并没有更新，但是count更新后num的更新就显示出来了</div>\n   <p>res{res.count}---res{ res.num }</p>\n   <p>change-{count}</p>\n   <button onClick={() => { setcount(count + 1) }}>set count</button>\n   <hr />\n   <p>change-{num}</p>\n   <button onClick={() => { setnum(num + 1) }}>set num</button>\n   <hr />分割线<hr />\n   <div>\n    <ChildMemo num = { num} count = {count}/>\n   </div>\n  </div >\n )\n};\n\nexport default Memo;","/Users/zhouyuying/react-study/react-hook-study/learn/src/Demo/ChildMemo.js",["33"],{"ruleId":"34","severity":1,"message":"35","line":12,"column":4,"nodeType":"36","endLine":12,"endColumn":13,"suggestions":"37"},{"ruleId":"34","severity":1,"message":"38","line":12,"column":5,"nodeType":"39","endLine":12,"endColumn":12},{"ruleId":"34","severity":1,"message":"40","line":9,"column":5,"nodeType":"36","endLine":9,"endColumn":12,"suggestions":"41"},"react-hooks/exhaustive-deps","React Hook useMemo has missing dependencies: 'count' and 'num'. Either include them or remove the dependency array.","ArrayExpression",["42"],"The 'count' literal is not a valid dependency because it never changes. Did you mean to include count in the array instead?","Literal","React Hook useMemo has a missing dependency: 'num'. Either include it or remove the dependency array.",["43"],{"desc":"44","fix":"45"},{"desc":"44","fix":"46"},"Update the dependencies array to be: [count, num]",{"range":"47","text":"48"},{"range":"49","text":"48"},[253,262],"[count, num]",[147,154]]